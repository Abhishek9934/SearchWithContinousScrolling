{"version":3,"sources":["hooks/fetchImages.js","components/body.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","query","page","useState","suggestion","setSuggestions","loading","setLoading","error","setError","list","setList","prevQuery","setPrevQuery","sendQuery","useCallback","a","prev","Set","url","process","axios","get","res","console","log","data","photos","photo","useEffect","delayDebounceFn","setTimeout","clearTimeout","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","RenderImageList","props","classes","React","modalImageURL","setModalImageUrl","open","setOpen","handleClose","className","ImageList","cols","imageData","map","item","ImageListItem","src","server","id","secret","alt","title","onClick","openDialog","Dialog","onClose","DialogContent","DialogActions","Button","color","Homepage","setQuery","setPage","loader","useRef","handleChange","e","target","value","handleObserver","entries","isIntersecting","observer","IntersectionObserver","rootMargin","threshold","current","observe","Grid","container","lg","xs","Autocomplete","options","renderInput","params","TextField","label","margin","variant","InputProps","type","onChange","Container","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.308e20a4.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useFetch(query, page ) {\r\n  const [suggestion , setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [prevQuery , setPrevQuery] = useState(null);\r\n  const sendQuery = useCallback(async () => {\r\n    try {\r\n      await setLoading(true);\r\n      await setError(false);\r\n      if(prevQuery !== query)\r\n      {\r\n          setList([]);\r\n          setPrevQuery(query);\r\n          setSuggestions((prev) => [\r\n            ...new Set([...prev, query])\r\n          ]); \r\n      }\r\n      const url = query === \"\" ? \r\n      `https://www.flickr.com/services/rest/?format=json&nojsoncallback=1&api_key=${process.env.REACT_APP_FLICKR_API_KEY}&method=flickr.photos.getRecent&page=${page}&per_page=99` :\r\n      `https://www.flickr.com/services/rest/?format=json&nojsoncallback=1&api_key=${process.env.REACT_APP_FLICKR_API_KEY}&method=flickr.photos.search&text=${query}&page=${page}&per_page=99`\r\n      ; \r\n      const res = await axios.get(\r\n        url\r\n      );\r\n      console.log(res.data)\r\n      if(res.data && res.data.photos && res.data.photos.photo )\r\n      await setList((prev) => [\r\n        ...new Set([...prev, ...res.data.photos.photo])\r\n      ]);\r\n        //  await setList(res.data.photos.photo);\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  }, [query , page , prevQuery]);\r\n\r\n\r\n  useEffect(() => {\r\n    const delayDebounceFn = setTimeout(() => {\r\n        sendQuery(query);\r\n      }, 1500)\r\n  \r\n      return () => clearTimeout(delayDebounceFn)   \r\n\r\n\r\n  }, [query, sendQuery , page]);\r\n\r\n\r\n\r\n\r\n  return { loading, error, list , suggestion };\r\n}\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ImageList from '@material-ui/core/ImageList';\r\nimport ImageListItem from '@material-ui/core/ImageListItem';\r\nimport { Button  , Dialog , DialogContent , DialogActions } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function RenderImageList(props) {\r\n  const classes = useStyles();\r\n  const [modalImageURL , setModalImageUrl] = React.useState('');\r\n  const [open , setOpen] = React.useState(false);\r\n\r\n  const openDialog = (item) => {\r\n    setModalImageUrl(`https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}.jpg`);\r\n    setOpen(true);\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ImageList  cols={3}>\r\n        {props.imageData && props.imageData.map((item) => (\r\n          <ImageListItem key={item.id} cols={ 1} >\r\n            <img src={`https://live.staticflickr.com/${item.server}/${item.id}_${item.secret}.jpg` } alt={item.title} onClick = {()=>openDialog(item)} />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogContent>\r\n          <img src={modalImageURL} alt={''}/>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport useFetch from \"../hooks/fetchImages\";\r\nimport RenderImageList from \"./body\";\r\nimport { Container ,Grid,TextField } from \"@material-ui/core\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n\r\nfunction Homepage() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const { loading, error, list , suggestion } = useFetch(query, page);\r\n  const loader = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const handleObserver = useCallback((entries) => {\r\n    const target = entries[0];\r\n    if (target.isIntersecting) {\r\n      setPage((prev) => prev + 1);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const option = {\r\n      root: null,\r\n      rootMargin: \"20px\",\r\n      threshold: 0\r\n    };\r\n    const observer = new IntersectionObserver(handleObserver, option);\r\n    if (loader.current) observer.observe(loader.current);\r\n  }, [handleObserver]);\r\n\r\n  console.log(\"app\" ,list);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Search Images</h1>      \r\n      <Grid container >\r\n        <Grid item lg = {4} xs = {0}></Grid>\r\n        <Grid item lg = {4} xs = {12}>\r\n        <Autocomplete\r\n          options={suggestion}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search input\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputProps={{ ...params.InputProps, type: 'search' }}\r\n              onChange = {handleChange}\r\n            />\r\n          )}\r\n        />\r\n        </Grid>\r\n        <Grid item  lg = {4} xs = {0}></Grid>\r\n      </Grid>\r\n\r\n\r\n      <Container>\r\n        <br>\r\n        </br>\r\n         <RenderImageList imageData={list} />\r\n      </Container>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error!</p>}\r\n      <div ref={loader} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import './App.css';\nimport Homepage from './components/main';\nfunction App() {\n  return (\n    <Homepage className={App} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}